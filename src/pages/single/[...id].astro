---
import Container from "@/components/Container.astro";
import { CommentForm } from "@/components/ui/comment-form";
import { Separator } from "@/components/ui/separator";
import { CldImage } from "astro-cloudinary";
import { Comment, db, eq } from "astro:db";
import { getImages } from "../../clients/cached-requests";
import Layout from "../../layouts/Layout.astro";

export const prerender = false;

const { id } = Astro.params;

const comments = await db.select().from(Comment).where(eq(Comment.postId, id));

const assets = await getImages();
const currIndex = assets.resources.findIndex((el) => el.public_id === id);
const item = assets.resources[currIndex];
const prev = assets.resources[currIndex - 1];
const next = assets.resources[currIndex + 1];
---

<Layout title={item.display_name}>
  <main class="space-y-16">
    {
      id && item ? (
        <div class="px-4 lg:px-8 bg-zinc-900 flex items-center justify-center h-[75dvh] relative">
          {prev && (
            <a
              class="prev | absolute z-10 top-1/2 -translate-y-1/2 left-8 lg:left-2"
              href={`/single/${prev.public_id}`}
              transition:name={id + "prev"}
            >
              <div class="rounded-full size-10 bg-white/60" />
              <span class="sr-only">Prev</span>
            </a>
          )}

          <CldImage
            src={id}
            width={+item.width}
            height={+item.height}
            alt={item.display_name}
            sizes="100vw"
            transition:name={id}
            class="!object-contain !max-h-full !max-w-full object-center !size-auto pointer-events-none"
          />

          {next && (
            <a
              class="next | absolute top-1/2 -translate-y-1/2 right-8 lg:right-2"
              href={`/single/${next.public_id}`}
              transition:name={id + "next"}
            >
              <div class="rounded-full size-10 bg-white/60 z-10" />
              <span class="sr-only">Next</span>
            </a>
          )}

          <small
            class="absolute text-black left-1/2 -translate-x-1/2 bottom-3 text-sm bg-white/60 rounded-md px-2 py-0.5 font-medium"
            transition:name={id + "count"}
          >
            {currIndex + 1} / {assets.resources.length}
          </small>
        </div>
      ) : (
        <div>Some param broken</div>
      )
    }

    <div class="pb-16">
      <Container>
        <div class="space-y-8">
          <h2 class="text-4xl font-medium">Commentaires</h2>
          <div>
            <CommentForm client:load />
          </div>
          <div class="space-y-4">
            {
              comments
                .sort((a, b) => (a.published > b.published ? -1 : 1))
                .map((el, i) => (
                  <Fragment>
                    {i !== 0 && <Separator />}
                    <div class="space-y-2">
                      <div>
                        <span class="font-medium text-lg">{el.author}</span>
                        &nbsp;
                        <small class="text-slate-700">
                          {new Intl.DateTimeFormat("fr-FR").format(
                            el.published
                          )}
                        </small>
                      </div>
                      <div>{el.content}</div>
                    </div>
                  </Fragment>
                ))
            }
          </div>
        </div>
      </Container>
    </div>
  </main>
</Layout>

<style>
  .prev {
    mask:
      url("/arrow-left.svg") center/32px no-repeat,
      linear-gradient(#000 0 0);
    mask-composite: exclude;
  }

  .next {
    mask:
      url("/arrow-right.svg") center/32px no-repeat,
      linear-gradient(#000 0 0);
    mask-composite: exclude;
  }
</style>
