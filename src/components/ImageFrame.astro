---
interface Props {
  wide?: boolean;
  href: string;
  isVideo?: boolean;
}

const { wide = false, href, isVideo = false } = Astro.props;
---

<a href={href} class:list={["frame", wide && "wide", isVideo && "is-video"]}>
  <slot />
</a>

<style>
  .frame {
    position: relative;
    aspect-ratio: 1;
    border: 0.375rem solid transparent;
    object-fit: cover;

    &:before {
      content: "";
      position: absolute;
      z-index: 2;
      inset: 0;
      background-color: #000;
      opacity: 0;
      border-radius: 0.75rem;
      transition: opacity 0.15s ease-in-out;
    }

    &:hover:before {
      opacity: 0.1;
    }

    &.is-video {
      &:after {
        content: "";
        position: absolute;
        z-index: 3;
        top: 50%;
        left: 50%;
        translate: -50% -50%;
        height: 3.5rem;
        width: 3.5rem;
        background-color: rgba(255, 255, 255, 0.6);
        border-radius: 9999px;
        mask:
          url("/play.svg") center/32px no-repeat,
          linear-gradient(#000 0 0);
        mask-composite: exclude;
      }
    }
  }

  :global(.frame img) {
    object-fit: cover;
    max-width: none !important;
    max-height: none !important;
    aspect-ratio: auto !important;
    width: 100%;
    height: 100%;
    border-radius: 0.75rem;
    box-shadow:
      0 4px 6px -1px rgb(0 0 0 / 0.1),
      0 2px 4px -2px rgb(0 0 0 / 0.1);

    pointer-events: none;
  }

  @media (width >= 600px) {
    .wide {
      aspect-ratio: 2;
      grid-column: span 2;
    }
  }
</style>
